<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
			<!-- 커넥션 속성 -->
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
	    <property name="username" value="ca4" ></property>
	    <property name="password" value="ca4" ></property>
<!-- 		value = 진짜 문자열 ref = 어떤 bean 어떤 객체의 변수명을 담으라는 의미		 -->
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!-- 		그냥 만들어지는게 아니라 데이터 소스를 이용해 만든다. -->
		<property name= "dataSource" ref ="dataSource"></property>
		<property name= "configLocation" value ="classpath:/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"></property>
<!-- 		mapper 이후 이렇게 추가 해준다. -->
	</bean>
	
	<bean destroy-method="clearCache" id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" name="sqlSessionFactory"></constructor-arg>
	</bean>
	
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
<!-- 	트랜잭션 작업을 어노테이션으로 사용 하겠다 라는 의미 -->
	<tx:annotation-driven/> 
	
	<context:component-scan base-package="com.naver.repository"></context:component-scan>
	<context:component-scan base-package="com.naver.service"></context:component-scan>
	
	<context:component-scan base-package="com.naver.aop"></context:component-scan>
<!-- 	 aop:config 얘가 있어야 아래에 다른 옵션들 사용 가능.. -->
	<aop:config></aop:config>	
	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

</beans>